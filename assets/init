#!/bin/bash

set -e

CONFIG_DIR="/root/config"
DATA_DIR="/var/lib/mysql"
TEMPLATES_DIR="$CONFIG_DIR/templates"
MYCNF_TEMPLATE="${CONFIG_DIR}/my.cnf.template"
MYCNF_DEFAULT="/etc/my.cnf"
MYCNF_BACKUP="${DATA_DIR}/my.cnf"

CONFIG_TEMPLATE=${CONFIG_TEMPLATE:-default}

create () {
    if [ $(ls $DATA_DIR | wc -l) -ne 0 ]; then
        echo "The MySQL data directory is not empty" >&2
        echo "Probably the database is already created" >&2
        exit 1
    fi

    cat ${MYCNF_TEMPLATE} >${MYCNF_DEFAULT}

    # Load configuration template
    CONF_TEMPLATE_FILE="${TEMPLATES_DIR}/${CONFIG_TEMPLATE}.sh"
    if [ ! -f $CONF_TEMPLATE_FILE ]; then
        echo "The specified configuration template name is invalid" >&2
        exit 1
    fi

    source $CONF_TEMPLATE_FILE
    trap "rm -rf $MYCNF_DEFAULT" EXIT

    sed 's/{{SORT_BUFFER_SIZE}}/'${SORT_BUFFER_SIZE}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{THREAD_STACK}}/'${THREAD_STACK}'/' -i ${MYCNF_DEFAULT}

    sed 's/{{SLOW_QUERY_TIME}}/'${SLOW_QUERY_TIME}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{MAX_CONNECTIONS}}/'${MAX_CONNECTIONS}'/' -i ${MYCNF_DEFAULT}

    sed 's/{{INNODB_BUFFER_POOL_SIZE}}/'${INNODB_BUFFER_POOL_SIZE}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{INNODB_LOG_BUFFER_SIZE}}/'${INNODB_LOG_BUFFER_SIZE}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{INNODB_BUFFER_POOL_INSTANCES}}/'${INNODB_BUFFER_POOL_INSTANCES}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{INNODB_MEMORY_POOL_DICT}}/'${INNODB_MEMORY_POOL_DICT}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{INNODB_DATA_FILES}}/'${INNODB_DATA_FILES}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{INNODB_AUTOEXTEND_SIZE}}/'${INNODB_AUTOEXTEND_SIZE}'/' -i ${MYCNF_DEFAULT}

    sed 's/{{MYISAM_KEY_BUFFER_SIZE}}/'${MYISAM_KEY_BUFFER_SIZE}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{MYISAM_READ_BUFFER_SIZE}}/'${MYISAM_READ_BUFFER_SIZE}'/' -i ${MYCNF_DEFAULT}

    if [ $BINLOG_ENABLE -eq 1 ]; then
        sed 's/# log_bin/log_bin/' -i ${MYCNF_DEFAULT}
        set 's/# expire_logs_days/expire_logs_days/' -i ${MYCNF_DEFAULT}
        sed 's/# binlog_cache_size/binlog_cache_size/' -i ${MYCNF_DEFAULT}
        sed 's/# sync_binlog/sync_binlog/' -i ${MYCNF_DEFAULT}
    fi
    sed 's/{{BINLOG_BASENAME}}/'${BINLOG_BASENAME}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{BINLOG_EXPIRE_DAYS}}/'${BINLOG_EXPIRE_DAYS}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{BINLOG_CACHE_SIZE}}/'${BINLOG_CACHE_SIZE}'/' -i ${MYCNF_DEFAULT}
    sed 's/{{BINLOG_SYNC}}/'${BINLOG_SYNC}'/' -i ${MYCNF_DEFAULT}

    cp ${MYCNF_DEFAULT} ${MYCNF_BACKUP}
}

start () {
    if [ $(ls $DATA_DIR | wc -l) -eq 0 ]; then
        echo "The MySQL data directory is empty" >&2
        echo "You must create the database before starting it" >&2
        exit 1
    fi

    cp ${MYCNF_BACKUP} ${MYCNF_DEFAULT}
}

showHelp () {
    echo "Available options:"
    echo " create           - Creates a MySQL database"
    echo " start            - Start the MySQL server (default)"
    echo " help             - Display this help"
    echo " [command]        - Execute the specified command (eg: bash)"
}

case "$1" in
    create)
        create
        ;;
    start)
        start
        ;;
    help)
        showHelp
        ;;
    *)
        if [ -x $1 ]; then
            $1
        else
            prog=$(which $1)
            if [ -n "$prog" ]; then
                shift 1
                $prog $@
            else
                showHelp
            fi
        fi
        ;;
esac

exit 0

# vim: set ts=4 et
